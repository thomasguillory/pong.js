// Generated by CoffeeScript 1.7.1
(function() {
  var Paddle, Player,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Paddle = require('./paddle.js').Paddle;

  Player = (function() {
    function Player(options) {
      this.sendValuesTo = __bind(this.sendValuesTo, this);
      this.sendValues = __bind(this.sendValues, this);
      this.id = options.id;
      this.game = options.game;
      this.score = 0;
      this.paddle = new Paddle({
        player: this
      });
    }

    Player.prototype.updateScore = function(score) {
      this.score = score;
      return this.sendValues();
    };

    Player.prototype.sendValues = function() {
      return this.game.broadcast("player" + this.id + ".score", this.score);
    };

    Player.prototype.sendValuesTo = function(socket) {
      socket.emit("player" + this.id + ".score", this.score);
      return this.paddle.sendValuesTo(socket);
    };

    Player.prototype.update = function() {
      return this.paddle.update();
    };

    Player.prototype.win = function() {
      this.updateScore(this.score + 1);
      return this.game.ball.initialize();
    };

    return Player;

  })();

  exports.Player = Player;

}).call(this);
