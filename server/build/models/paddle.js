// Generated by CoffeeScript 1.7.1
(function() {
  var Paddle,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Paddle = (function() {
    Paddle.WIDTH = 2;

    Paddle.HEIGHT = 25;

    Paddle.SPEED = 2;

    function Paddle(options) {
      this.sendValuesTo = __bind(this.sendValuesTo, this);
      this.sendValues = __bind(this.sendValues, this);
      this.player = options.player;
      this.moveTo(50);
      this.dy = 0;
    }

    Paddle.prototype.moveTo = function(y) {
      this.position = y;
      return this.sendValues();
    };

    Paddle.prototype.sendValues = function() {
      return this.player.game.broadcast("player" + this.player.id + ".paddle.position", this.position);
    };

    Paddle.prototype.sendValuesTo = function(socket) {
      return socket.emit("player" + this.player.id + ".paddle.position", this.position);
    };

    Paddle.prototype.attach = function(socket) {
      return socket.on("paddle.acceleration", (function(_this) {
        return function(dy) {
          return _this.dy = dy;
        };
      })(this));
    };

    Paddle.prototype.update = function() {
      if ((this.dy < 0 && !(this.position < this.constructor.HEIGHT / 2)) || (this.dy > 0 && !(this.position > (100 - this.constructor.HEIGHT / 2)))) {
        return this.moveTo(this.position + this.dy);
      }
    };

    return Paddle;

  })();

  exports.Paddle = Paddle;

}).call(this);
